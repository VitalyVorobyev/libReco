//
// File generated by rootcint at Thu Jul 27 17:35:26 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME lreco_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "lreco_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void DalitzVars_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DalitzVars(void *p = 0);
   static void *newArray_DalitzVars(Long_t size, void *p);
   static void delete_DalitzVars(void *p);
   static void deleteArray_DalitzVars(void *p);
   static void destruct_DalitzVars(void *p);
   static void streamer_DalitzVars(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DalitzVars*)
   {
      ::DalitzVars *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DalitzVars >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DalitzVars", ::DalitzVars::Class_Version(), "./DalitzVars.h", 6,
                  typeid(::DalitzVars), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DalitzVars::Dictionary, isa_proxy, 0,
                  sizeof(::DalitzVars) );
      instance.SetNew(&new_DalitzVars);
      instance.SetNewArray(&newArray_DalitzVars);
      instance.SetDelete(&delete_DalitzVars);
      instance.SetDeleteArray(&deleteArray_DalitzVars);
      instance.SetDestructor(&destruct_DalitzVars);
      instance.SetStreamerFunc(&streamer_DalitzVars);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DalitzVars*)
   {
      return GenerateInitInstanceLocal((::DalitzVars*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DalitzVars*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DeltaEMbc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DeltaEMbc(void *p = 0);
   static void *newArray_DeltaEMbc(Long_t size, void *p);
   static void delete_DeltaEMbc(void *p);
   static void deleteArray_DeltaEMbc(void *p);
   static void destruct_DeltaEMbc(void *p);
   static void streamer_DeltaEMbc(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DeltaEMbc*)
   {
      ::DeltaEMbc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DeltaEMbc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DeltaEMbc", ::DeltaEMbc::Class_Version(), "./DeltaEMbc.h", 6,
                  typeid(::DeltaEMbc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DeltaEMbc::Dictionary, isa_proxy, 0,
                  sizeof(::DeltaEMbc) );
      instance.SetNew(&new_DeltaEMbc);
      instance.SetNewArray(&newArray_DeltaEMbc);
      instance.SetDelete(&delete_DeltaEMbc);
      instance.SetDeleteArray(&deleteArray_DeltaEMbc);
      instance.SetDestructor(&destruct_DeltaEMbc);
      instance.SetStreamerFunc(&streamer_DeltaEMbc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DeltaEMbc*)
   {
      return GenerateInitInstanceLocal((::DeltaEMbc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DeltaEMbc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EvtInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EvtInfo(void *p = 0);
   static void *newArray_EvtInfo(Long_t size, void *p);
   static void delete_EvtInfo(void *p);
   static void deleteArray_EvtInfo(void *p);
   static void destruct_EvtInfo(void *p);
   static void streamer_EvtInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EvtInfo*)
   {
      ::EvtInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EvtInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EvtInfo", ::EvtInfo::Class_Version(), "./EvtInfo.h", 6,
                  typeid(::EvtInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EvtInfo::Dictionary, isa_proxy, 0,
                  sizeof(::EvtInfo) );
      instance.SetNew(&new_EvtInfo);
      instance.SetNewArray(&newArray_EvtInfo);
      instance.SetDelete(&delete_EvtInfo);
      instance.SetDeleteArray(&deleteArray_EvtInfo);
      instance.SetDestructor(&destruct_EvtInfo);
      instance.SetStreamerFunc(&streamer_EvtInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EvtInfo*)
   {
      return GenerateInitInstanceLocal((::EvtInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EvtInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SFWMInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SFWMInfo(void *p = 0);
   static void *newArray_SFWMInfo(Long_t size, void *p);
   static void delete_SFWMInfo(void *p);
   static void deleteArray_SFWMInfo(void *p);
   static void destruct_SFWMInfo(void *p);
   static void streamer_SFWMInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SFWMInfo*)
   {
      ::SFWMInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SFWMInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SFWMInfo", ::SFWMInfo::Class_Version(), "./SFWMInfo.h", 6,
                  typeid(::SFWMInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SFWMInfo::Dictionary, isa_proxy, 0,
                  sizeof(::SFWMInfo) );
      instance.SetNew(&new_SFWMInfo);
      instance.SetNewArray(&newArray_SFWMInfo);
      instance.SetDelete(&delete_SFWMInfo);
      instance.SetDeleteArray(&deleteArray_SFWMInfo);
      instance.SetDestructor(&destruct_SFWMInfo);
      instance.SetStreamerFunc(&streamer_SFWMInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SFWMInfo*)
   {
      return GenerateInitInstanceLocal((::SFWMInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SFWMInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EvtShape_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EvtShape(void *p = 0);
   static void *newArray_EvtShape(Long_t size, void *p);
   static void delete_EvtShape(void *p);
   static void deleteArray_EvtShape(void *p);
   static void destruct_EvtShape(void *p);
   static void streamer_EvtShape(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EvtShape*)
   {
      ::EvtShape *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EvtShape >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EvtShape", ::EvtShape::Class_Version(), "./EvtShape.h", 7,
                  typeid(::EvtShape), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EvtShape::Dictionary, isa_proxy, 0,
                  sizeof(::EvtShape) );
      instance.SetNew(&new_EvtShape);
      instance.SetNewArray(&newArray_EvtShape);
      instance.SetDelete(&delete_EvtShape);
      instance.SetDeleteArray(&deleteArray_EvtShape);
      instance.SetDestructor(&destruct_EvtShape);
      instance.SetStreamerFunc(&streamer_EvtShape);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EvtShape*)
   {
      return GenerateInitInstanceLocal((::EvtShape*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EvtShape*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void GammaInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GammaInfo(void *p = 0);
   static void *newArray_GammaInfo(Long_t size, void *p);
   static void delete_GammaInfo(void *p);
   static void deleteArray_GammaInfo(void *p);
   static void destruct_GammaInfo(void *p);
   static void streamer_GammaInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GammaInfo*)
   {
      ::GammaInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GammaInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GammaInfo", ::GammaInfo::Class_Version(), "./GammaInfo.h", 6,
                  typeid(::GammaInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::GammaInfo::Dictionary, isa_proxy, 0,
                  sizeof(::GammaInfo) );
      instance.SetNew(&new_GammaInfo);
      instance.SetNewArray(&newArray_GammaInfo);
      instance.SetDelete(&delete_GammaInfo);
      instance.SetDeleteArray(&deleteArray_GammaInfo);
      instance.SetDestructor(&destruct_GammaInfo);
      instance.SetStreamerFunc(&streamer_GammaInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GammaInfo*)
   {
      return GenerateInitInstanceLocal((::GammaInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GammaInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void GenHepEvt_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GenHepEvt(void *p = 0);
   static void *newArray_GenHepEvt(Long_t size, void *p);
   static void delete_GenHepEvt(void *p);
   static void deleteArray_GenHepEvt(void *p);
   static void destruct_GenHepEvt(void *p);
   static void streamer_GenHepEvt(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GenHepEvt*)
   {
      ::GenHepEvt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GenHepEvt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GenHepEvt", ::GenHepEvt::Class_Version(), "./GenHepEvt.h", 7,
                  typeid(::GenHepEvt), ::ROOT::DefineBehavior(ptr, ptr),
                  &::GenHepEvt::Dictionary, isa_proxy, 0,
                  sizeof(::GenHepEvt) );
      instance.SetNew(&new_GenHepEvt);
      instance.SetNewArray(&newArray_GenHepEvt);
      instance.SetDelete(&delete_GenHepEvt);
      instance.SetDeleteArray(&deleteArray_GenHepEvt);
      instance.SetDestructor(&destruct_GenHepEvt);
      instance.SetStreamerFunc(&streamer_GenHepEvt);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GenHepEvt*)
   {
      return GenerateInitInstanceLocal((::GenHepEvt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GenHepEvt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void GenParticleInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GenParticleInfo(void *p = 0);
   static void *newArray_GenParticleInfo(Long_t size, void *p);
   static void delete_GenParticleInfo(void *p);
   static void deleteArray_GenParticleInfo(void *p);
   static void destruct_GenParticleInfo(void *p);
   static void streamer_GenParticleInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GenParticleInfo*)
   {
      ::GenParticleInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GenParticleInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GenParticleInfo", ::GenParticleInfo::Class_Version(), "./GenParticleInfo.h", 6,
                  typeid(::GenParticleInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::GenParticleInfo::Dictionary, isa_proxy, 0,
                  sizeof(::GenParticleInfo) );
      instance.SetNew(&new_GenParticleInfo);
      instance.SetNewArray(&newArray_GenParticleInfo);
      instance.SetDelete(&delete_GenParticleInfo);
      instance.SetDeleteArray(&deleteArray_GenParticleInfo);
      instance.SetDestructor(&destruct_GenParticleInfo);
      instance.SetStreamerFunc(&streamer_GenParticleInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GenParticleInfo*)
   {
      return GenerateInitInstanceLocal((::GenParticleInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GenParticleInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HamletTag_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HamletTag(void *p = 0);
   static void *newArray_HamletTag(Long_t size, void *p);
   static void delete_HamletTag(void *p);
   static void deleteArray_HamletTag(void *p);
   static void destruct_HamletTag(void *p);
   static void streamer_HamletTag(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HamletTag*)
   {
      ::HamletTag *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HamletTag >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HamletTag", ::HamletTag::Class_Version(), "./HamletTag.h", 6,
                  typeid(::HamletTag), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HamletTag::Dictionary, isa_proxy, 0,
                  sizeof(::HamletTag) );
      instance.SetNew(&new_HamletTag);
      instance.SetNewArray(&newArray_HamletTag);
      instance.SetDelete(&delete_HamletTag);
      instance.SetDeleteArray(&deleteArray_HamletTag);
      instance.SetDestructor(&destruct_HamletTag);
      instance.SetStreamerFunc(&streamer_HamletTag);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HamletTag*)
   {
      return GenerateInitInstanceLocal((::HamletTag*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HamletTag*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void IPBoost_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_IPBoost(void *p = 0);
   static void *newArray_IPBoost(Long_t size, void *p);
   static void delete_IPBoost(void *p);
   static void deleteArray_IPBoost(void *p);
   static void destruct_IPBoost(void *p);
   static void streamer_IPBoost(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::IPBoost*)
   {
      ::IPBoost *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::IPBoost >(0);
      static ::ROOT::TGenericClassInfo 
         instance("IPBoost", ::IPBoost::Class_Version(), "./IPBoost.h", 6,
                  typeid(::IPBoost), ::ROOT::DefineBehavior(ptr, ptr),
                  &::IPBoost::Dictionary, isa_proxy, 0,
                  sizeof(::IPBoost) );
      instance.SetNew(&new_IPBoost);
      instance.SetNewArray(&newArray_IPBoost);
      instance.SetDelete(&delete_IPBoost);
      instance.SetDeleteArray(&deleteArray_IPBoost);
      instance.SetDestructor(&destruct_IPBoost);
      instance.SetStreamerFunc(&streamer_IPBoost);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::IPBoost*)
   {
      return GenerateInitInstanceLocal((::IPBoost*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::IPBoost*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Ks0Info_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ks0Info(void *p = 0);
   static void *newArray_Ks0Info(Long_t size, void *p);
   static void delete_Ks0Info(void *p);
   static void deleteArray_Ks0Info(void *p);
   static void destruct_Ks0Info(void *p);
   static void streamer_Ks0Info(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Ks0Info*)
   {
      ::Ks0Info *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ks0Info >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ks0Info", ::Ks0Info::Class_Version(), "./Ks0Info.h", 6,
                  typeid(::Ks0Info), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Ks0Info::Dictionary, isa_proxy, 0,
                  sizeof(::Ks0Info) );
      instance.SetNew(&new_Ks0Info);
      instance.SetNewArray(&newArray_Ks0Info);
      instance.SetDelete(&delete_Ks0Info);
      instance.SetDeleteArray(&deleteArray_Ks0Info);
      instance.SetDestructor(&destruct_Ks0Info);
      instance.SetStreamerFunc(&streamer_Ks0Info);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Ks0Info*)
   {
      return GenerateInitInstanceLocal((::Ks0Info*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ks0Info*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Pi0Info_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Pi0Info(void *p = 0);
   static void *newArray_Pi0Info(Long_t size, void *p);
   static void delete_Pi0Info(void *p);
   static void deleteArray_Pi0Info(void *p);
   static void destruct_Pi0Info(void *p);
   static void streamer_Pi0Info(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Pi0Info*)
   {
      ::Pi0Info *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Pi0Info >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Pi0Info", ::Pi0Info::Class_Version(), "./Pi0Info.h", 6,
                  typeid(::Pi0Info), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Pi0Info::Dictionary, isa_proxy, 0,
                  sizeof(::Pi0Info) );
      instance.SetNew(&new_Pi0Info);
      instance.SetNewArray(&newArray_Pi0Info);
      instance.SetDelete(&delete_Pi0Info);
      instance.SetDeleteArray(&deleteArray_Pi0Info);
      instance.SetDestructor(&destruct_Pi0Info);
      instance.SetStreamerFunc(&streamer_Pi0Info);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Pi0Info*)
   {
      return GenerateInitInstanceLocal((::Pi0Info*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pi0Info*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TrackInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TrackInfo(void *p = 0);
   static void *newArray_TrackInfo(Long_t size, void *p);
   static void delete_TrackInfo(void *p);
   static void deleteArray_TrackInfo(void *p);
   static void destruct_TrackInfo(void *p);
   static void streamer_TrackInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TrackInfo*)
   {
      ::TrackInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TrackInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TrackInfo", ::TrackInfo::Class_Version(), "./TrackInfo.h", 6,
                  typeid(::TrackInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TrackInfo::Dictionary, isa_proxy, 0,
                  sizeof(::TrackInfo) );
      instance.SetNew(&new_TrackInfo);
      instance.SetNewArray(&newArray_TrackInfo);
      instance.SetDelete(&delete_TrackInfo);
      instance.SetDeleteArray(&deleteArray_TrackInfo);
      instance.SetDestructor(&destruct_TrackInfo);
      instance.SetStreamerFunc(&streamer_TrackInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TrackInfo*)
   {
      return GenerateInitInstanceLocal((::TrackInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TrackInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void VertexInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_VertexInfo(void *p = 0);
   static void *newArray_VertexInfo(Long_t size, void *p);
   static void delete_VertexInfo(void *p);
   static void deleteArray_VertexInfo(void *p);
   static void destruct_VertexInfo(void *p);
   static void streamer_VertexInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::VertexInfo*)
   {
      ::VertexInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::VertexInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("VertexInfo", ::VertexInfo::Class_Version(), "./VertexInfo.h", 6,
                  typeid(::VertexInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::VertexInfo::Dictionary, isa_proxy, 0,
                  sizeof(::VertexInfo) );
      instance.SetNew(&new_VertexInfo);
      instance.SetNewArray(&newArray_VertexInfo);
      instance.SetDelete(&delete_VertexInfo);
      instance.SetDeleteArray(&deleteArray_VertexInfo);
      instance.SetDestructor(&destruct_VertexInfo);
      instance.SetStreamerFunc(&streamer_VertexInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::VertexInfo*)
   {
      return GenerateInitInstanceLocal((::VertexInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::VertexInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TrackInfo2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TrackInfo2(void *p = 0);
   static void *newArray_TrackInfo2(Long_t size, void *p);
   static void delete_TrackInfo2(void *p);
   static void deleteArray_TrackInfo2(void *p);
   static void destruct_TrackInfo2(void *p);
   static void streamer_TrackInfo2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TrackInfo2*)
   {
      ::TrackInfo2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TrackInfo2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TrackInfo2", ::TrackInfo2::Class_Version(), "./TrackInfo2.h", 9,
                  typeid(::TrackInfo2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TrackInfo2::Dictionary, isa_proxy, 0,
                  sizeof(::TrackInfo2) );
      instance.SetNew(&new_TrackInfo2);
      instance.SetNewArray(&newArray_TrackInfo2);
      instance.SetDelete(&delete_TrackInfo2);
      instance.SetDeleteArray(&deleteArray_TrackInfo2);
      instance.SetDestructor(&destruct_TrackInfo2);
      instance.SetStreamerFunc(&streamer_TrackInfo2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TrackInfo2*)
   {
      return GenerateInitInstanceLocal((::TrackInfo2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TrackInfo2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void H0Info_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_H0Info(void *p = 0);
   static void *newArray_H0Info(Long_t size, void *p);
   static void delete_H0Info(void *p);
   static void deleteArray_H0Info(void *p);
   static void destruct_H0Info(void *p);
   static void streamer_H0Info(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::H0Info*)
   {
      ::H0Info *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::H0Info >(0);
      static ::ROOT::TGenericClassInfo 
         instance("H0Info", ::H0Info::Class_Version(), "./H0Info.h", 9,
                  typeid(::H0Info), ::ROOT::DefineBehavior(ptr, ptr),
                  &::H0Info::Dictionary, isa_proxy, 0,
                  sizeof(::H0Info) );
      instance.SetNew(&new_H0Info);
      instance.SetNewArray(&newArray_H0Info);
      instance.SetDelete(&delete_H0Info);
      instance.SetDeleteArray(&deleteArray_H0Info);
      instance.SetDestructor(&destruct_H0Info);
      instance.SetStreamerFunc(&streamer_H0Info);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::H0Info*)
   {
      return GenerateInitInstanceLocal((::H0Info*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::H0Info*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr DalitzVars::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DalitzVars::Class_Name()
{
   return "DalitzVars";
}

//______________________________________________________________________________
const char *DalitzVars::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DalitzVars*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DalitzVars::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DalitzVars*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DalitzVars::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DalitzVars*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DalitzVars::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DalitzVars*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DeltaEMbc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DeltaEMbc::Class_Name()
{
   return "DeltaEMbc";
}

//______________________________________________________________________________
const char *DeltaEMbc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DeltaEMbc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DeltaEMbc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DeltaEMbc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DeltaEMbc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DeltaEMbc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DeltaEMbc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DeltaEMbc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EvtInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EvtInfo::Class_Name()
{
   return "EvtInfo";
}

//______________________________________________________________________________
const char *EvtInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EvtInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EvtInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EvtInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EvtInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EvtInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EvtInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EvtInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SFWMInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SFWMInfo::Class_Name()
{
   return "SFWMInfo";
}

//______________________________________________________________________________
const char *SFWMInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SFWMInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SFWMInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SFWMInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SFWMInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SFWMInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SFWMInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SFWMInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EvtShape::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EvtShape::Class_Name()
{
   return "EvtShape";
}

//______________________________________________________________________________
const char *EvtShape::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EvtShape*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EvtShape::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EvtShape*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EvtShape::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EvtShape*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EvtShape::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EvtShape*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr GammaInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GammaInfo::Class_Name()
{
   return "GammaInfo";
}

//______________________________________________________________________________
const char *GammaInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GammaInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GammaInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GammaInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GammaInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GammaInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GammaInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GammaInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr GenHepEvt::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GenHepEvt::Class_Name()
{
   return "GenHepEvt";
}

//______________________________________________________________________________
const char *GenHepEvt::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GenHepEvt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GenHepEvt::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GenHepEvt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GenHepEvt::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GenHepEvt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GenHepEvt::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GenHepEvt*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr GenParticleInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GenParticleInfo::Class_Name()
{
   return "GenParticleInfo";
}

//______________________________________________________________________________
const char *GenParticleInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GenParticleInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GenParticleInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GenParticleInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GenParticleInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GenParticleInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GenParticleInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GenParticleInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HamletTag::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HamletTag::Class_Name()
{
   return "HamletTag";
}

//______________________________________________________________________________
const char *HamletTag::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HamletTag*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HamletTag::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HamletTag*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HamletTag::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HamletTag*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HamletTag::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HamletTag*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr IPBoost::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *IPBoost::Class_Name()
{
   return "IPBoost";
}

//______________________________________________________________________________
const char *IPBoost::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::IPBoost*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int IPBoost::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::IPBoost*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void IPBoost::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::IPBoost*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *IPBoost::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::IPBoost*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Ks0Info::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Ks0Info::Class_Name()
{
   return "Ks0Info";
}

//______________________________________________________________________________
const char *Ks0Info::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Ks0Info*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ks0Info::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Ks0Info*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ks0Info::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Ks0Info*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ks0Info::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Ks0Info*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Pi0Info::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Pi0Info::Class_Name()
{
   return "Pi0Info";
}

//______________________________________________________________________________
const char *Pi0Info::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Pi0Info*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Pi0Info::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Pi0Info*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Pi0Info::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Pi0Info*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Pi0Info::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Pi0Info*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TrackInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TrackInfo::Class_Name()
{
   return "TrackInfo";
}

//______________________________________________________________________________
const char *TrackInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrackInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrackInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrackInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr VertexInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *VertexInfo::Class_Name()
{
   return "VertexInfo";
}

//______________________________________________________________________________
const char *VertexInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::VertexInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VertexInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::VertexInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VertexInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::VertexInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VertexInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::VertexInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TrackInfo2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TrackInfo2::Class_Name()
{
   return "TrackInfo2";
}

//______________________________________________________________________________
const char *TrackInfo2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrackInfo2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrackInfo2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrackInfo2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TrackInfo2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr H0Info::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *H0Info::Class_Name()
{
   return "H0Info";
}

//______________________________________________________________________________
const char *H0Info::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::H0Info*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int H0Info::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::H0Info*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void H0Info::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::H0Info*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *H0Info::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::H0Info*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void DalitzVars::Streamer(TBuffer &R__b)
{
   // Stream an object of class DalitzVars.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((double*)msq);
      R__b.ReadStaticArray((double*)cosh);
      R__b.CheckByteCount(R__s, R__c, DalitzVars::IsA());
   } else {
      R__c = R__b.WriteVersion(DalitzVars::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray(msq, 3);
      R__b.WriteArray(cosh, 3);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void DalitzVars::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DalitzVars.
      TClass *R__cl = ::DalitzVars::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "msq[3]", msq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cosh[3]", cosh);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DalitzVars(void *p) {
      return  p ? new(p) ::DalitzVars : new ::DalitzVars;
   }
   static void *newArray_DalitzVars(Long_t nElements, void *p) {
      return p ? new(p) ::DalitzVars[nElements] : new ::DalitzVars[nElements];
   }
   // Wrapper around operator delete
   static void delete_DalitzVars(void *p) {
      delete ((::DalitzVars*)p);
   }
   static void deleteArray_DalitzVars(void *p) {
      delete [] ((::DalitzVars*)p);
   }
   static void destruct_DalitzVars(void *p) {
      typedef ::DalitzVars current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_DalitzVars(TBuffer &buf, void *obj) {
      ((::DalitzVars*)obj)->::DalitzVars::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::DalitzVars

//______________________________________________________________________________
void DeltaEMbc::Streamer(TBuffer &R__b)
{
   // Stream an object of class DeltaEMbc.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> de;
      R__b >> mbc;
      R__b.CheckByteCount(R__s, R__c, DeltaEMbc::IsA());
   } else {
      R__c = R__b.WriteVersion(DeltaEMbc::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << de;
      R__b << mbc;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void DeltaEMbc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DeltaEMbc.
      TClass *R__cl = ::DeltaEMbc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "de", &de);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbc", &mbc);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DeltaEMbc(void *p) {
      return  p ? new(p) ::DeltaEMbc : new ::DeltaEMbc;
   }
   static void *newArray_DeltaEMbc(Long_t nElements, void *p) {
      return p ? new(p) ::DeltaEMbc[nElements] : new ::DeltaEMbc[nElements];
   }
   // Wrapper around operator delete
   static void delete_DeltaEMbc(void *p) {
      delete ((::DeltaEMbc*)p);
   }
   static void deleteArray_DeltaEMbc(void *p) {
      delete [] ((::DeltaEMbc*)p);
   }
   static void destruct_DeltaEMbc(void *p) {
      typedef ::DeltaEMbc current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_DeltaEMbc(TBuffer &buf, void *obj) {
      ((::DeltaEMbc*)obj)->::DeltaEMbc::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::DeltaEMbc

//______________________________________________________________________________
void EvtInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class EvtInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> exp;
      R__b >> run;
      R__b >> evtn;
      R__b.CheckByteCount(R__s, R__c, EvtInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(EvtInfo::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << exp;
      R__b << run;
      R__b << evtn;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EvtInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EvtInfo.
      TClass *R__cl = ::EvtInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "exp", &exp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtn", &evtn);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EvtInfo(void *p) {
      return  p ? new(p) ::EvtInfo : new ::EvtInfo;
   }
   static void *newArray_EvtInfo(Long_t nElements, void *p) {
      return p ? new(p) ::EvtInfo[nElements] : new ::EvtInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_EvtInfo(void *p) {
      delete ((::EvtInfo*)p);
   }
   static void deleteArray_EvtInfo(void *p) {
      delete [] ((::EvtInfo*)p);
   }
   static void destruct_EvtInfo(void *p) {
      typedef ::EvtInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EvtInfo(TBuffer &buf, void *obj) {
      ((::EvtInfo*)obj)->::EvtInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EvtInfo

//______________________________________________________________________________
void EvtShape::Streamer(TBuffer &R__b)
{
   // Stream an object of class EvtShape.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> cos_thr;
      R__b >> thr_sig;
      R__b >> thr_oth;
      k0.Streamer(R__b);
      k1.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, EvtShape::IsA());
   } else {
      R__c = R__b.WriteVersion(EvtShape::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << cos_thr;
      R__b << thr_sig;
      R__b << thr_oth;
      k0.Streamer(R__b);
      k1.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void EvtShape::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EvtShape.
      TClass *R__cl = ::EvtShape::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_thr", &cos_thr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thr_sig", &thr_sig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thr_oth", &thr_oth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "k0", &k0);
      R__insp.InspectMember(k0, "k0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "k1", &k1);
      R__insp.InspectMember(k1, "k1.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EvtShape(void *p) {
      return  p ? new(p) ::EvtShape : new ::EvtShape;
   }
   static void *newArray_EvtShape(Long_t nElements, void *p) {
      return p ? new(p) ::EvtShape[nElements] : new ::EvtShape[nElements];
   }
   // Wrapper around operator delete
   static void delete_EvtShape(void *p) {
      delete ((::EvtShape*)p);
   }
   static void deleteArray_EvtShape(void *p) {
      delete [] ((::EvtShape*)p);
   }
   static void destruct_EvtShape(void *p) {
      typedef ::EvtShape current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_EvtShape(TBuffer &buf, void *obj) {
      ((::EvtShape*)obj)->::EvtShape::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::EvtShape

//______________________________________________________________________________
void GammaInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class GammaInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((double*)p);
      R__b.CheckByteCount(R__s, R__c, GammaInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(GammaInfo::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray(p, 3);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void GammaInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GammaInfo.
      TClass *R__cl = ::GammaInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p[3]", p);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_GammaInfo(void *p) {
      return  p ? new(p) ::GammaInfo : new ::GammaInfo;
   }
   static void *newArray_GammaInfo(Long_t nElements, void *p) {
      return p ? new(p) ::GammaInfo[nElements] : new ::GammaInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_GammaInfo(void *p) {
      delete ((::GammaInfo*)p);
   }
   static void deleteArray_GammaInfo(void *p) {
      delete [] ((::GammaInfo*)p);
   }
   static void destruct_GammaInfo(void *p) {
      typedef ::GammaInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_GammaInfo(TBuffer &buf, void *obj) {
      ((::GammaInfo*)obj)->::GammaInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::GammaInfo

//______________________________________________________________________________
void GenHepEvt::Streamer(TBuffer &R__b)
{
   // Stream an object of class GenHepEvt.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         vector<int> &R__stl =  idhep;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  daF;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  daL;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, GenHepEvt::IsA());
   } else {
      R__c = R__b.WriteVersion(GenHepEvt::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         vector<int> &R__stl =  idhep;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  daF;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  daL;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void GenHepEvt::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GenHepEvt.
      TClass *R__cl = ::GenHepEvt::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idhep", (void*)&idhep);
      R__insp.InspectMember("vector<int>", (void*)&idhep, "idhep.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daF", (void*)&daF);
      R__insp.InspectMember("vector<int>", (void*)&daF, "daF.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daL", (void*)&daL);
      R__insp.InspectMember("vector<int>", (void*)&daL, "daL.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_GenHepEvt(void *p) {
      return  p ? new(p) ::GenHepEvt : new ::GenHepEvt;
   }
   static void *newArray_GenHepEvt(Long_t nElements, void *p) {
      return p ? new(p) ::GenHepEvt[nElements] : new ::GenHepEvt[nElements];
   }
   // Wrapper around operator delete
   static void delete_GenHepEvt(void *p) {
      delete ((::GenHepEvt*)p);
   }
   static void deleteArray_GenHepEvt(void *p) {
      delete [] ((::GenHepEvt*)p);
   }
   static void destruct_GenHepEvt(void *p) {
      typedef ::GenHepEvt current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_GenHepEvt(TBuffer &buf, void *obj) {
      ((::GenHepEvt*)obj)->::GenHepEvt::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::GenHepEvt

//______________________________________________________________________________
void GenParticleInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class GenParticleInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> id;
      R__b >> flag;
      R__b.ReadStaticArray((int*)chain);
      R__b.CheckByteCount(R__s, R__c, GenParticleInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(GenParticleInfo::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << id;
      R__b << flag;
      R__b.WriteArray(chain, 9);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void GenParticleInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GenParticleInfo.
      TClass *R__cl = ::GenParticleInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag", &flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chain[9]", chain);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_GenParticleInfo(void *p) {
      return  p ? new(p) ::GenParticleInfo : new ::GenParticleInfo;
   }
   static void *newArray_GenParticleInfo(Long_t nElements, void *p) {
      return p ? new(p) ::GenParticleInfo[nElements] : new ::GenParticleInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_GenParticleInfo(void *p) {
      delete ((::GenParticleInfo*)p);
   }
   static void deleteArray_GenParticleInfo(void *p) {
      delete [] ((::GenParticleInfo*)p);
   }
   static void destruct_GenParticleInfo(void *p) {
      typedef ::GenParticleInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_GenParticleInfo(TBuffer &buf, void *obj) {
      ((::GenParticleInfo*)obj)->::GenParticleInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::GenParticleInfo

//______________________________________________________________________________
void HamletTag::Streamer(TBuffer &R__b)
{
   // Stream an object of class HamletTag.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> tag_LH;
      R__b >> tag_LH_err;
      R__b >> tagl;
      R__b >> taglid;
      R__b >> flv;
      R__b.CheckByteCount(R__s, R__c, HamletTag::IsA());
   } else {
      R__c = R__b.WriteVersion(HamletTag::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << tag_LH;
      R__b << tag_LH_err;
      R__b << tagl;
      R__b << taglid;
      R__b << flv;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HamletTag::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HamletTag.
      TClass *R__cl = ::HamletTag::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tag_LH", &tag_LH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tag_LH_err", &tag_LH_err);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tagl", &tagl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "taglid", &taglid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flv", &flv);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HamletTag(void *p) {
      return  p ? new(p) ::HamletTag : new ::HamletTag;
   }
   static void *newArray_HamletTag(Long_t nElements, void *p) {
      return p ? new(p) ::HamletTag[nElements] : new ::HamletTag[nElements];
   }
   // Wrapper around operator delete
   static void delete_HamletTag(void *p) {
      delete ((::HamletTag*)p);
   }
   static void deleteArray_HamletTag(void *p) {
      delete [] ((::HamletTag*)p);
   }
   static void destruct_HamletTag(void *p) {
      typedef ::HamletTag current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HamletTag(TBuffer &buf, void *obj) {
      ((::HamletTag*)obj)->::HamletTag::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HamletTag

//______________________________________________________________________________
void IPBoost::Streamer(TBuffer &R__b)
{
   // Stream an object of class IPBoost.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((double*)ip);
      R__b.ReadStaticArray((double*)boost);
      R__b.CheckByteCount(R__s, R__c, IPBoost::IsA());
   } else {
      R__c = R__b.WriteVersion(IPBoost::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray(ip, 3);
      R__b.WriteArray(boost, 3);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void IPBoost::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class IPBoost.
      TClass *R__cl = ::IPBoost::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ip[3]", ip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "boost[3]", boost);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_IPBoost(void *p) {
      return  p ? new(p) ::IPBoost : new ::IPBoost;
   }
   static void *newArray_IPBoost(Long_t nElements, void *p) {
      return p ? new(p) ::IPBoost[nElements] : new ::IPBoost[nElements];
   }
   // Wrapper around operator delete
   static void delete_IPBoost(void *p) {
      delete ((::IPBoost*)p);
   }
   static void deleteArray_IPBoost(void *p) {
      delete [] ((::IPBoost*)p);
   }
   static void destruct_IPBoost(void *p) {
      typedef ::IPBoost current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_IPBoost(TBuffer &buf, void *obj) {
      ((::IPBoost*)obj)->::IPBoost::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::IPBoost

//______________________________________________________________________________
void Ks0Info::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ks0Info.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m;
      R__b >> m_raw;
      R__b.ReadStaticArray((double*)p);
      R__b >> dr;
      R__b >> dz;
      R__b >> dphi;
      R__b >> fl;
      R__b.CheckByteCount(R__s, R__c, Ks0Info::IsA());
   } else {
      R__c = R__b.WriteVersion(Ks0Info::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m;
      R__b << m_raw;
      R__b.WriteArray(p, 3);
      R__b << dr;
      R__b << dz;
      R__b << dphi;
      R__b << fl;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Ks0Info::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ks0Info.
      TClass *R__cl = ::Ks0Info::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_raw", &m_raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p[3]", p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dr", &dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dz", &dz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dphi", &dphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fl", &fl);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Ks0Info(void *p) {
      return  p ? new(p) ::Ks0Info : new ::Ks0Info;
   }
   static void *newArray_Ks0Info(Long_t nElements, void *p) {
      return p ? new(p) ::Ks0Info[nElements] : new ::Ks0Info[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ks0Info(void *p) {
      delete ((::Ks0Info*)p);
   }
   static void deleteArray_Ks0Info(void *p) {
      delete [] ((::Ks0Info*)p);
   }
   static void destruct_Ks0Info(void *p) {
      typedef ::Ks0Info current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Ks0Info(TBuffer &buf, void *obj) {
      ((::Ks0Info*)obj)->::Ks0Info::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::Ks0Info

//______________________________________________________________________________
void Pi0Info::Streamer(TBuffer &R__b)
{
   // Stream an object of class Pi0Info.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m;
      R__b >> m_raw;
      R__b.ReadStaticArray((double*)p);
      R__b >> eg1;
      R__b >> eg2;
      R__b >> chisq;
      R__b.CheckByteCount(R__s, R__c, Pi0Info::IsA());
   } else {
      R__c = R__b.WriteVersion(Pi0Info::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m;
      R__b << m_raw;
      R__b.WriteArray(p, 3);
      R__b << eg1;
      R__b << eg2;
      R__b << chisq;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Pi0Info::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Pi0Info.
      TClass *R__cl = ::Pi0Info::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_raw", &m_raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p[3]", p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eg1", &eg1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eg2", &eg2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chisq", &chisq);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Pi0Info(void *p) {
      return  p ? new(p) ::Pi0Info : new ::Pi0Info;
   }
   static void *newArray_Pi0Info(Long_t nElements, void *p) {
      return p ? new(p) ::Pi0Info[nElements] : new ::Pi0Info[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pi0Info(void *p) {
      delete ((::Pi0Info*)p);
   }
   static void deleteArray_Pi0Info(void *p) {
      delete [] ((::Pi0Info*)p);
   }
   static void destruct_Pi0Info(void *p) {
      typedef ::Pi0Info current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Pi0Info(TBuffer &buf, void *obj) {
      ((::Pi0Info*)obj)->::Pi0Info::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::Pi0Info

//______________________________________________________________________________
void SFWMInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class SFWMInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> kmm2;
      R__b >> ket;
      R__b >> khso00;
      R__b >> khso01;
      R__b >> khso02;
      R__b >> khso03;
      R__b >> khso04;
      R__b >> khso10;
      R__b >> khso12;
      R__b >> khso14;
      R__b >> khso20;
      R__b >> khso22;
      R__b >> khso24;
      R__b >> khoo0;
      R__b >> khoo1;
      R__b >> khoo2;
      R__b >> khoo3;
      R__b >> khoo4;
      R__b.CheckByteCount(R__s, R__c, SFWMInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(SFWMInfo::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << kmm2;
      R__b << ket;
      R__b << khso00;
      R__b << khso01;
      R__b << khso02;
      R__b << khso03;
      R__b << khso04;
      R__b << khso10;
      R__b << khso12;
      R__b << khso14;
      R__b << khso20;
      R__b << khso22;
      R__b << khso24;
      R__b << khoo0;
      R__b << khoo1;
      R__b << khoo2;
      R__b << khoo3;
      R__b << khoo4;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SFWMInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SFWMInfo.
      TClass *R__cl = ::SFWMInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kmm2", &kmm2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ket", &ket);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khso00", &khso00);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khso01", &khso01);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khso02", &khso02);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khso03", &khso03);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khso04", &khso04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khso10", &khso10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khso12", &khso12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khso14", &khso14);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khso20", &khso20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khso22", &khso22);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khso24", &khso24);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khoo0", &khoo0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khoo1", &khoo1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khoo2", &khoo2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khoo3", &khoo3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "khoo4", &khoo4);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SFWMInfo(void *p) {
      return  p ? new(p) ::SFWMInfo : new ::SFWMInfo;
   }
   static void *newArray_SFWMInfo(Long_t nElements, void *p) {
      return p ? new(p) ::SFWMInfo[nElements] : new ::SFWMInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_SFWMInfo(void *p) {
      delete ((::SFWMInfo*)p);
   }
   static void deleteArray_SFWMInfo(void *p) {
      delete [] ((::SFWMInfo*)p);
   }
   static void destruct_SFWMInfo(void *p) {
      typedef ::SFWMInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SFWMInfo(TBuffer &buf, void *obj) {
      ((::SFWMInfo*)obj)->::SFWMInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SFWMInfo

//______________________________________________________________________________
void TrackInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TrackInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((double*)p);
      R__b >> r;
      R__b >> z;
      R__b >> rz_svd;
      R__b >> rphi_svd;
      R__b >> atckpi;
      R__b >> atckp;
      R__b >> eid;
      R__b >> muid;
      R__b.CheckByteCount(R__s, R__c, TrackInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(TrackInfo::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray(p, 3);
      R__b << r;
      R__b << z;
      R__b << rz_svd;
      R__b << rphi_svd;
      R__b << atckpi;
      R__b << atckp;
      R__b << eid;
      R__b << muid;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TrackInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TrackInfo.
      TClass *R__cl = ::TrackInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p[3]", p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r", &r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rz_svd", &rz_svd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rphi_svd", &rphi_svd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "atckpi", &atckpi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "atckp", &atckp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eid", &eid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muid", &muid);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TrackInfo(void *p) {
      return  p ? new(p) ::TrackInfo : new ::TrackInfo;
   }
   static void *newArray_TrackInfo(Long_t nElements, void *p) {
      return p ? new(p) ::TrackInfo[nElements] : new ::TrackInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_TrackInfo(void *p) {
      delete ((::TrackInfo*)p);
   }
   static void deleteArray_TrackInfo(void *p) {
      delete [] ((::TrackInfo*)p);
   }
   static void destruct_TrackInfo(void *p) {
      typedef ::TrackInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TrackInfo(TBuffer &buf, void *obj) {
      ((::TrackInfo*)obj)->::TrackInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TrackInfo

//______________________________________________________________________________
void VertexInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class VertexInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> z;
      R__b >> sz;
      R__b >> ntrk;
      R__b >> ndf;
      R__b >> chisq;
      R__b >> cl;
      R__b.CheckByteCount(R__s, R__c, VertexInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(VertexInfo::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << z;
      R__b << sz;
      R__b << ntrk;
      R__b << ndf;
      R__b << chisq;
      R__b << cl;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void VertexInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class VertexInfo.
      TClass *R__cl = ::VertexInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sz", &sz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntrk", &ntrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndf", &ndf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chisq", &chisq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cl", &cl);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_VertexInfo(void *p) {
      return  p ? new(p) ::VertexInfo : new ::VertexInfo;
   }
   static void *newArray_VertexInfo(Long_t nElements, void *p) {
      return p ? new(p) ::VertexInfo[nElements] : new ::VertexInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_VertexInfo(void *p) {
      delete ((::VertexInfo*)p);
   }
   static void deleteArray_VertexInfo(void *p) {
      delete [] ((::VertexInfo*)p);
   }
   static void destruct_VertexInfo(void *p) {
      typedef ::VertexInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_VertexInfo(TBuffer &buf, void *obj) {
      ((::VertexInfo*)obj)->::VertexInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::VertexInfo

//______________________________________________________________________________
void TrackInfo2::Streamer(TBuffer &R__b)
{
   // Stream an object of class TrackInfo2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> p;
      R__b >> costh;
      R__b >> phi;
      R__b >> r;
      R__b >> z;
      R__b >> rz_svd;
      R__b >> rphi_svd;
      R__b >> atckpi;
      R__b >> atckp;
      R__b >> eid;
      R__b >> muid;
      R__b.CheckByteCount(R__s, R__c, TrackInfo2::IsA());
   } else {
      R__c = R__b.WriteVersion(TrackInfo2::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << p;
      R__b << costh;
      R__b << phi;
      R__b << r;
      R__b << z;
      R__b << rz_svd;
      R__b << rphi_svd;
      R__b << atckpi;
      R__b << atckp;
      R__b << eid;
      R__b << muid;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TrackInfo2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TrackInfo2.
      TClass *R__cl = ::TrackInfo2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "costh", &costh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r", &r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rz_svd", &rz_svd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rphi_svd", &rphi_svd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "atckpi", &atckpi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "atckp", &atckp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eid", &eid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muid", &muid);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TrackInfo2(void *p) {
      return  p ? new(p) ::TrackInfo2 : new ::TrackInfo2;
   }
   static void *newArray_TrackInfo2(Long_t nElements, void *p) {
      return p ? new(p) ::TrackInfo2[nElements] : new ::TrackInfo2[nElements];
   }
   // Wrapper around operator delete
   static void delete_TrackInfo2(void *p) {
      delete ((::TrackInfo2*)p);
   }
   static void deleteArray_TrackInfo2(void *p) {
      delete [] ((::TrackInfo2*)p);
   }
   static void destruct_TrackInfo2(void *p) {
      typedef ::TrackInfo2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TrackInfo2(TBuffer &buf, void *obj) {
      ((::TrackInfo2*)obj)->::TrackInfo2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TrackInfo2

//______________________________________________________________________________
void H0Info::Streamer(TBuffer &R__b)
{
   // Stream an object of class H0Info.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m;
      R__b >> p;
      R__b >> costh;
      R__b >> phi;
      R__b >> mchi2;
      R__b.CheckByteCount(R__s, R__c, H0Info::IsA());
   } else {
      R__c = R__b.WriteVersion(H0Info::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m;
      R__b << p;
      R__b << costh;
      R__b << phi;
      R__b << mchi2;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void H0Info::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class H0Info.
      TClass *R__cl = ::H0Info::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "costh", &costh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mchi2", &mchi2);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_H0Info(void *p) {
      return  p ? new(p) ::H0Info : new ::H0Info;
   }
   static void *newArray_H0Info(Long_t nElements, void *p) {
      return p ? new(p) ::H0Info[nElements] : new ::H0Info[nElements];
   }
   // Wrapper around operator delete
   static void delete_H0Info(void *p) {
      delete ((::H0Info*)p);
   }
   static void deleteArray_H0Info(void *p) {
      delete [] ((::H0Info*)p);
   }
   static void destruct_H0Info(void *p) {
      typedef ::H0Info current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_H0Info(TBuffer &buf, void *obj) {
      ((::H0Info*)obj)->::H0Info::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::H0Info

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/sw/belle/cern/root_v5.34.36/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* lreco_dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablelreco_dict();

extern "C" void G__set_cpp_environmentlreco_dict() {
  G__cpp_reset_tagtablelreco_dict();
}
#include <new>
extern "C" int G__cpp_dllrevlreco_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DalitzVars */
static int G__lreco_dict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DalitzVars* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DalitzVars[n];
     } else {
       p = new((void*) gvp) DalitzVars[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DalitzVars;
     } else {
       p = new((void*) gvp) DalitzVars;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_DalitzVars));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DalitzVars*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DalitzVars::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DalitzVars::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DalitzVars::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DalitzVars::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DalitzVars*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DalitzVars::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DalitzVars::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DalitzVars::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DalitzVars::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DalitzVars* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DalitzVars(*(DalitzVars*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_DalitzVars));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DalitzVars G__TDalitzVars;
static int G__lreco_dict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DalitzVars*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DalitzVars*) (soff+(sizeof(DalitzVars)*i)))->~G__TDalitzVars();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DalitzVars*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DalitzVars*) (soff))->~G__TDalitzVars();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DalitzVars* dest = (DalitzVars*) G__getstructoffset();
   *dest = *(DalitzVars*) libp->para[0].ref;
   const DalitzVars& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DeltaEMbc */
static int G__lreco_dict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DeltaEMbc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DeltaEMbc[n];
     } else {
       p = new((void*) gvp) DeltaEMbc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DeltaEMbc;
     } else {
       p = new((void*) gvp) DeltaEMbc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_DeltaEMbc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DeltaEMbc*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DeltaEMbc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DeltaEMbc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DeltaEMbc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DeltaEMbc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DeltaEMbc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DeltaEMbc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DeltaEMbc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DeltaEMbc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DeltaEMbc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DeltaEMbc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DeltaEMbc(*(DeltaEMbc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_DeltaEMbc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DeltaEMbc G__TDeltaEMbc;
static int G__lreco_dict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DeltaEMbc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DeltaEMbc*) (soff+(sizeof(DeltaEMbc)*i)))->~G__TDeltaEMbc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DeltaEMbc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DeltaEMbc*) (soff))->~G__TDeltaEMbc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DeltaEMbc* dest = (DeltaEMbc*) G__getstructoffset();
   *dest = *(DeltaEMbc*) libp->para[0].ref;
   const DeltaEMbc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EvtInfo */
static int G__lreco_dict_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EvtInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EvtInfo[n];
     } else {
       p = new((void*) gvp) EvtInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EvtInfo;
     } else {
       p = new((void*) gvp) EvtInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_EvtInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvtInfo*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EvtInfo*) G__getstructoffset())->SVD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EvtInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EvtInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EvtInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EvtInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvtInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EvtInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EvtInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EvtInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EvtInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EvtInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EvtInfo(*(EvtInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_EvtInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EvtInfo G__TEvtInfo;
static int G__lreco_dict_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EvtInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EvtInfo*) (soff+(sizeof(EvtInfo)*i)))->~G__TEvtInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EvtInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EvtInfo*) (soff))->~G__TEvtInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EvtInfo* dest = (EvtInfo*) G__getstructoffset();
   *dest = *(EvtInfo*) libp->para[0].ref;
   const EvtInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SFWMInfo */
static int G__lreco_dict_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SFWMInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SFWMInfo[n];
     } else {
       p = new((void*) gvp) SFWMInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SFWMInfo;
     } else {
       p = new((void*) gvp) SFWMInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_SFWMInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SFWMInfo*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SFWMInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SFWMInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SFWMInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SFWMInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SFWMInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SFWMInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SFWMInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SFWMInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_171_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SFWMInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_171_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SFWMInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SFWMInfo(*(SFWMInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_SFWMInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SFWMInfo G__TSFWMInfo;
static int G__lreco_dict_171_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SFWMInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SFWMInfo*) (soff+(sizeof(SFWMInfo)*i)))->~G__TSFWMInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SFWMInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SFWMInfo*) (soff))->~G__TSFWMInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SFWMInfo* dest = (SFWMInfo*) G__getstructoffset();
   *dest = *(SFWMInfo*) libp->para[0].ref;
   const SFWMInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EvtShape */
static int G__lreco_dict_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EvtShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EvtShape[n];
     } else {
       p = new((void*) gvp) EvtShape[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EvtShape;
     } else {
       p = new((void*) gvp) EvtShape;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_EvtShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_172_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvtShape*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EvtShape::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EvtShape::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EvtShape::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EvtShape::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvtShape*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EvtShape::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_172_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EvtShape::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EvtShape::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EvtShape::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EvtShape* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EvtShape(*(EvtShape*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_EvtShape));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EvtShape G__TEvtShape;
static int G__lreco_dict_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EvtShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EvtShape*) (soff+(sizeof(EvtShape)*i)))->~G__TEvtShape();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EvtShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EvtShape*) (soff))->~G__TEvtShape();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EvtShape* dest = (EvtShape*) G__getstructoffset();
   *dest = *(EvtShape*) libp->para[0].ref;
   const EvtShape& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GammaInfo */
static int G__lreco_dict_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GammaInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GammaInfo[n];
     } else {
       p = new((void*) gvp) GammaInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GammaInfo;
     } else {
       p = new((void*) gvp) GammaInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_GammaInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GammaInfo*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GammaInfo*) G__getstructoffset())->P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GammaInfo*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GammaInfo*) G__getstructoffset())->costh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GammaInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GammaInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GammaInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GammaInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GammaInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GammaInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GammaInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GammaInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GammaInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_173_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GammaInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GammaInfo(*(GammaInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_GammaInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GammaInfo G__TGammaInfo;
static int G__lreco_dict_173_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GammaInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GammaInfo*) (soff+(sizeof(GammaInfo)*i)))->~G__TGammaInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GammaInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GammaInfo*) (soff))->~G__TGammaInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_173_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GammaInfo* dest = (GammaInfo*) G__getstructoffset();
   *dest = *(GammaInfo*) libp->para[0].ref;
   const GammaInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GenHepEvt */
static int G__lreco_dict_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GenHepEvt* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GenHepEvt[n];
     } else {
       p = new((void*) gvp) GenHepEvt[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GenHepEvt;
     } else {
       p = new((void*) gvp) GenHepEvt;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_GenHepEvt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenHepEvt*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GenHepEvt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenHepEvt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GenHepEvt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GenHepEvt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_174_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenHepEvt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_174_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenHepEvt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_174_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GenHepEvt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_174_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenHepEvt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GenHepEvt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GenHepEvt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GenHepEvt(*(GenHepEvt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_GenHepEvt));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GenHepEvt G__TGenHepEvt;
static int G__lreco_dict_174_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GenHepEvt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GenHepEvt*) (soff+(sizeof(GenHepEvt)*i)))->~G__TGenHepEvt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GenHepEvt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GenHepEvt*) (soff))->~G__TGenHepEvt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_174_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GenHepEvt* dest = (GenHepEvt*) G__getstructoffset();
   *dest = *(GenHepEvt*) libp->para[0].ref;
   const GenHepEvt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GenParticleInfo */
static int G__lreco_dict_179_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GenParticleInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GenParticleInfo[n];
     } else {
       p = new((void*) gvp) GenParticleInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GenParticleInfo;
     } else {
       p = new((void*) gvp) GenParticleInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_GenParticleInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_179_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenParticleInfo*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_179_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GenParticleInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_179_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenParticleInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_179_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GenParticleInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_179_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GenParticleInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_179_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenParticleInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_179_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenParticleInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_179_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GenParticleInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_179_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenParticleInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_179_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GenParticleInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_179_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GenParticleInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GenParticleInfo(*(GenParticleInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_GenParticleInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GenParticleInfo G__TGenParticleInfo;
static int G__lreco_dict_179_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GenParticleInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GenParticleInfo*) (soff+(sizeof(GenParticleInfo)*i)))->~G__TGenParticleInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GenParticleInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GenParticleInfo*) (soff))->~G__TGenParticleInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_179_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GenParticleInfo* dest = (GenParticleInfo*) G__getstructoffset();
   *dest = *(GenParticleInfo*) libp->para[0].ref;
   const GenParticleInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HamletTag */
static int G__lreco_dict_180_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HamletTag* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HamletTag[n];
     } else {
       p = new((void*) gvp) HamletTag[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HamletTag;
     } else {
       p = new((void*) gvp) HamletTag;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_HamletTag));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_180_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HamletTag*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_180_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HamletTag::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_180_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HamletTag::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_180_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HamletTag::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_180_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HamletTag::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_180_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HamletTag*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_180_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HamletTag::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_180_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HamletTag::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_180_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HamletTag::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_180_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HamletTag::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_180_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HamletTag* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HamletTag(*(HamletTag*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_HamletTag));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HamletTag G__THamletTag;
static int G__lreco_dict_180_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HamletTag*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HamletTag*) (soff+(sizeof(HamletTag)*i)))->~G__THamletTag();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HamletTag*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HamletTag*) (soff))->~G__THamletTag();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_180_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HamletTag* dest = (HamletTag*) G__getstructoffset();
   *dest = *(HamletTag*) libp->para[0].ref;
   const HamletTag& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* IPBoost */
static int G__lreco_dict_181_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   IPBoost* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new IPBoost[n];
     } else {
       p = new((void*) gvp) IPBoost[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new IPBoost;
     } else {
       p = new((void*) gvp) IPBoost;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_IPBoost));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_181_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IPBoost*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_181_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) IPBoost::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_181_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IPBoost::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_181_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) IPBoost::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_181_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      IPBoost::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_181_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IPBoost*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_181_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IPBoost::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_181_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) IPBoost::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_181_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IPBoost::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_181_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) IPBoost::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_181_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   IPBoost* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new IPBoost(*(IPBoost*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_IPBoost));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef IPBoost G__TIPBoost;
static int G__lreco_dict_181_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (IPBoost*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((IPBoost*) (soff+(sizeof(IPBoost)*i)))->~G__TIPBoost();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (IPBoost*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((IPBoost*) (soff))->~G__TIPBoost();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_181_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   IPBoost* dest = (IPBoost*) G__getstructoffset();
   *dest = *(IPBoost*) libp->para[0].ref;
   const IPBoost& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ks0Info */
static int G__lreco_dict_182_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ks0Info* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ks0Info[n];
     } else {
       p = new((void*) gvp) Ks0Info[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ks0Info;
     } else {
       p = new((void*) gvp) Ks0Info;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_Ks0Info));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_182_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ks0Info*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_182_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ks0Info::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_182_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ks0Info::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_182_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ks0Info::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_182_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ks0Info::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_182_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ks0Info*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_182_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ks0Info::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_182_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ks0Info::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_182_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ks0Info::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_182_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ks0Info::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_182_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ks0Info* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ks0Info(*(Ks0Info*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_Ks0Info));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ks0Info G__TKs0Info;
static int G__lreco_dict_182_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ks0Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ks0Info*) (soff+(sizeof(Ks0Info)*i)))->~G__TKs0Info();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ks0Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ks0Info*) (soff))->~G__TKs0Info();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_182_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ks0Info* dest = (Ks0Info*) G__getstructoffset();
   *dest = *(Ks0Info*) libp->para[0].ref;
   const Ks0Info& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pi0Info */
static int G__lreco_dict_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pi0Info* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pi0Info[n];
     } else {
       p = new((void*) gvp) Pi0Info[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pi0Info;
     } else {
       p = new((void*) gvp) Pi0Info;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_Pi0Info));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pi0Info*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pi0Info*) G__getstructoffset())->asym());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pi0Info*) G__getstructoffset())->P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pi0Info*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pi0Info*) G__getstructoffset())->costh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pi0Info*) G__getstructoffset())->egmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Pi0Info*) G__getstructoffset())->egmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Pi0Info::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Pi0Info::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Pi0Info::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Pi0Info::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Pi0Info*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Pi0Info::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Pi0Info::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Pi0Info::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_183_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Pi0Info::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_183_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pi0Info* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pi0Info(*(Pi0Info*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_Pi0Info));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pi0Info G__TPi0Info;
static int G__lreco_dict_183_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pi0Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pi0Info*) (soff+(sizeof(Pi0Info)*i)))->~G__TPi0Info();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pi0Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pi0Info*) (soff))->~G__TPi0Info();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_183_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pi0Info* dest = (Pi0Info*) G__getstructoffset();
   *dest = *(Pi0Info*) libp->para[0].ref;
   const Pi0Info& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TrackInfo */
static int G__lreco_dict_184_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackInfo[n];
     } else {
       p = new((void*) gvp) TrackInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackInfo;
     } else {
       p = new((void*) gvp) TrackInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TrackInfo*) G__getstructoffset())->P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TrackInfo*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TrackInfo*) G__getstructoffset())->costh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TrackInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TrackInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TrackInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_184_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_184_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TrackInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TrackInfo(*(TrackInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TrackInfo G__TTrackInfo;
static int G__lreco_dict_184_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TrackInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TrackInfo*) (soff+(sizeof(TrackInfo)*i)))->~G__TTrackInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TrackInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TrackInfo*) (soff))->~G__TTrackInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_184_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackInfo* dest = (TrackInfo*) G__getstructoffset();
   *dest = *(TrackInfo*) libp->para[0].ref;
   const TrackInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* VertexInfo */
static int G__lreco_dict_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VertexInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VertexInfo[n];
     } else {
       p = new((void*) gvp) VertexInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VertexInfo;
     } else {
       p = new((void*) gvp) VertexInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_VertexInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VertexInfo*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) VertexInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VertexInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) VertexInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      VertexInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_185_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VertexInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_185_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VertexInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_185_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) VertexInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_185_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VertexInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_185_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) VertexInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_185_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   VertexInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new VertexInfo(*(VertexInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_VertexInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef VertexInfo G__TVertexInfo;
static int G__lreco_dict_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (VertexInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((VertexInfo*) (soff+(sizeof(VertexInfo)*i)))->~G__TVertexInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (VertexInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((VertexInfo*) (soff))->~G__TVertexInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VertexInfo* dest = (VertexInfo*) G__getstructoffset();
   *dest = *(VertexInfo*) libp->para[0].ref;
   const VertexInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TrackInfo2 */
static int G__lreco_dict_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackInfo2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackInfo2[n];
     } else {
       p = new((void*) gvp) TrackInfo2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackInfo2;
     } else {
       p = new((void*) gvp) TrackInfo2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo2*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TrackInfo2*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TrackInfo2*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TrackInfo2*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TrackInfo2*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TrackInfo2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TrackInfo2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TrackInfo2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackInfo2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackInfo2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TrackInfo2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TrackInfo2(*(TrackInfo2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TrackInfo2 G__TTrackInfo2;
static int G__lreco_dict_186_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TrackInfo2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TrackInfo2*) (soff+(sizeof(TrackInfo2)*i)))->~G__TTrackInfo2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TrackInfo2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TrackInfo2*) (soff))->~G__TTrackInfo2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_186_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackInfo2* dest = (TrackInfo2*) G__getstructoffset();
   *dest = *(TrackInfo2*) libp->para[0].ref;
   const TrackInfo2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* H0Info */
static int G__lreco_dict_187_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   H0Info* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new H0Info[n];
     } else {
       p = new((void*) gvp) H0Info[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new H0Info;
     } else {
       p = new((void*) gvp) H0Info;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_H0Info));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((H0Info*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const H0Info*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const H0Info*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const H0Info*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const H0Info*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) H0Info::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) H0Info::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) H0Info::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      H0Info::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((H0Info*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) H0Info::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) H0Info::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) H0Info::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__lreco_dict_187_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) H0Info::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__lreco_dict_187_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   H0Info* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new H0Info(*(H0Info*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__lreco_dictLN_H0Info));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef H0Info G__TH0Info;
static int G__lreco_dict_187_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (H0Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((H0Info*) (soff+(sizeof(H0Info)*i)))->~G__TH0Info();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (H0Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((H0Info*) (soff))->~G__TH0Info();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__lreco_dict_187_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   H0Info* dest = (H0Info*) G__getstructoffset();
   *dest = *(H0Info*) libp->para[0].ref;
   const H0Info& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DalitzVars */

/* DeltaEMbc */

/* EvtInfo */

/* SFWMInfo */

/* EvtShape */

/* GammaInfo */

/* GenHepEvt */

/* GenParticleInfo */

/* HamletTag */

/* IPBoost */

/* Ks0Info */

/* Pi0Info */

/* TrackInfo */

/* VertexInfo */

/* TrackInfo2 */

/* H0Info */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunclreco_dict {
 public:
  G__Sizep2memfunclreco_dict(): p(&G__Sizep2memfunclreco_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunclreco_dict::*p)();
};

size_t G__get_sizep2memfunclreco_dict()
{
  G__Sizep2memfunclreco_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancelreco_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_DalitzVars))) {
     DalitzVars *G__Lderived;
     G__Lderived=(DalitzVars*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_DalitzVars),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_DeltaEMbc))) {
     DeltaEMbc *G__Lderived;
     G__Lderived=(DeltaEMbc*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_DeltaEMbc),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_EvtInfo))) {
     EvtInfo *G__Lderived;
     G__Lderived=(EvtInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_EvtInfo),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_SFWMInfo))) {
     SFWMInfo *G__Lderived;
     G__Lderived=(SFWMInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_SFWMInfo),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_EvtShape))) {
     EvtShape *G__Lderived;
     G__Lderived=(EvtShape*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_EvtShape),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_GammaInfo))) {
     GammaInfo *G__Lderived;
     G__Lderived=(GammaInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_GammaInfo),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_GenHepEvt))) {
     GenHepEvt *G__Lderived;
     G__Lderived=(GenHepEvt*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_GenHepEvt),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_GenParticleInfo))) {
     GenParticleInfo *G__Lderived;
     G__Lderived=(GenParticleInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_GenParticleInfo),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_HamletTag))) {
     HamletTag *G__Lderived;
     G__Lderived=(HamletTag*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_HamletTag),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_IPBoost))) {
     IPBoost *G__Lderived;
     G__Lderived=(IPBoost*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_IPBoost),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_Ks0Info))) {
     Ks0Info *G__Lderived;
     G__Lderived=(Ks0Info*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_Ks0Info),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_Pi0Info))) {
     Pi0Info *G__Lderived;
     G__Lderived=(Pi0Info*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_Pi0Info),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo))) {
     TrackInfo *G__Lderived;
     G__Lderived=(TrackInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_VertexInfo))) {
     VertexInfo *G__Lderived;
     G__Lderived=(VertexInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_VertexInfo),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo2))) {
     TrackInfo2 *G__Lderived;
     G__Lderived=(TrackInfo2*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo2),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__lreco_dictLN_H0Info))) {
     H0Info *G__Lderived;
     G__Lderived=(H0Info*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__lreco_dictLN_H0Info),G__get_linked_tagnum(&G__lreco_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablelreco_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__lreco_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__lreco_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__lreco_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__lreco_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__lreco_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__lreco_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__lreco_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__lreco_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__lreco_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__lreco_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__lreco_dictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__lreco_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__lreco_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__lreco_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__lreco_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DalitzVars */
static void G__setup_memvarDalitzVars(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_DalitzVars));
   { DalitzVars *p; p=(DalitzVars*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->msq)-(long)(p)),100,0,0,-1,-1,-1,1,"msq[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cosh)-(long)(p)),100,0,0,-1,-1,-1,1,"cosh[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DeltaEMbc */
static void G__setup_memvarDeltaEMbc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_DeltaEMbc));
   { DeltaEMbc *p; p=(DeltaEMbc*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->de)-(long)(p)),100,0,0,-1,-1,-1,1,"de=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mbc)-(long)(p)),100,0,0,-1,-1,-1,1,"mbc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EvtInfo */
static void G__setup_memvarEvtInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_EvtInfo));
   { EvtInfo *p; p=(EvtInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->exp)-(long)(p)),105,0,0,-1,-1,-1,1,"exp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtn)-(long)(p)),105,0,0,-1,-1,-1,1,"evtn=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SFWMInfo */
static void G__setup_memvarSFWMInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_SFWMInfo));
   { SFWMInfo *p; p=(SFWMInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->kmm2)-(long)(p)),100,0,0,-1,-1,-1,1,"kmm2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ket)-(long)(p)),100,0,0,-1,-1,-1,1,"ket=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khso00)-(long)(p)),100,0,0,-1,-1,-1,1,"khso00=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khso01)-(long)(p)),100,0,0,-1,-1,-1,1,"khso01=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khso02)-(long)(p)),100,0,0,-1,-1,-1,1,"khso02=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khso03)-(long)(p)),100,0,0,-1,-1,-1,1,"khso03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khso04)-(long)(p)),100,0,0,-1,-1,-1,1,"khso04=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khso10)-(long)(p)),100,0,0,-1,-1,-1,1,"khso10=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khso12)-(long)(p)),100,0,0,-1,-1,-1,1,"khso12=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khso14)-(long)(p)),100,0,0,-1,-1,-1,1,"khso14=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khso20)-(long)(p)),100,0,0,-1,-1,-1,1,"khso20=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khso22)-(long)(p)),100,0,0,-1,-1,-1,1,"khso22=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khso24)-(long)(p)),100,0,0,-1,-1,-1,1,"khso24=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khoo0)-(long)(p)),100,0,0,-1,-1,-1,1,"khoo0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khoo1)-(long)(p)),100,0,0,-1,-1,-1,1,"khoo1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khoo2)-(long)(p)),100,0,0,-1,-1,-1,1,"khoo2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khoo3)-(long)(p)),100,0,0,-1,-1,-1,1,"khoo3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->khoo4)-(long)(p)),100,0,0,-1,-1,-1,1,"khoo4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EvtShape */
static void G__setup_memvarEvtShape(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_EvtShape));
   { EvtShape *p; p=(EvtShape*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->cos_thr)-(long)(p)),100,0,0,-1,-1,-1,1,"cos_thr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thr_sig)-(long)(p)),100,0,0,-1,-1,-1,1,"thr_sig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thr_oth)-(long)(p)),100,0,0,-1,-1,-1,1,"thr_oth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->k0)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__lreco_dictLN_SFWMInfo),-1,-1,1,"k0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->k1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__lreco_dictLN_SFWMInfo),-1,-1,1,"k1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GammaInfo */
static void G__setup_memvarGammaInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_GammaInfo));
   { GammaInfo *p; p=(GammaInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),100,0,0,-1,-1,-1,1,"p[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GenHepEvt */
static void G__setup_memvarGenHepEvt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_GenHepEvt));
   { GenHepEvt *p; p=(GenHepEvt*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->idhep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__lreco_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"idhep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->daF)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__lreco_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"daF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->daL)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__lreco_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"daL=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GenParticleInfo */
static void G__setup_memvarGenParticleInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_GenParticleInfo));
   { GenParticleInfo *p; p=(GenParticleInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,-1,-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->flag)-(long)(p)),105,0,0,-1,-1,-1,1,"flag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chain)-(long)(p)),105,0,0,-1,-1,-1,1,"chain[9]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HamletTag */
static void G__setup_memvarHamletTag(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_HamletTag));
   { HamletTag *p; p=(HamletTag*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->tag_LH)-(long)(p)),100,0,0,-1,-1,-1,1,"tag_LH=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tag_LH_err)-(long)(p)),100,0,0,-1,-1,-1,1,"tag_LH_err=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tagl)-(long)(p)),105,0,0,-1,-1,-1,1,"tagl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->taglid)-(long)(p)),105,0,0,-1,-1,-1,1,"taglid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->flv)-(long)(p)),105,0,0,-1,-1,-1,1,"flv=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* IPBoost */
static void G__setup_memvarIPBoost(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_IPBoost));
   { IPBoost *p; p=(IPBoost*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ip)-(long)(p)),100,0,0,-1,-1,-1,1,"ip[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->boost)-(long)(p)),100,0,0,-1,-1,-1,1,"boost[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ks0Info */
static void G__setup_memvarKs0Info(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_Ks0Info));
   { Ks0Info *p; p=(Ks0Info*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,-1,-1,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_raw)-(long)(p)),100,0,0,-1,-1,-1,1,"m_raw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),100,0,0,-1,-1,-1,1,"p[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dr)-(long)(p)),100,0,0,-1,-1,-1,1,"dr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dz)-(long)(p)),100,0,0,-1,-1,-1,1,"dz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dphi)-(long)(p)),100,0,0,-1,-1,-1,1,"dphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fl)-(long)(p)),100,0,0,-1,-1,-1,1,"fl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pi0Info */
static void G__setup_memvarPi0Info(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_Pi0Info));
   { Pi0Info *p; p=(Pi0Info*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,-1,-1,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_raw)-(long)(p)),100,0,0,-1,-1,-1,1,"m_raw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),100,0,0,-1,-1,-1,1,"p[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eg1)-(long)(p)),100,0,0,-1,-1,-1,1,"eg1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eg2)-(long)(p)),100,0,0,-1,-1,-1,1,"eg2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chisq)-(long)(p)),100,0,0,-1,-1,-1,1,"chisq=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TrackInfo */
static void G__setup_memvarTrackInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo));
   { TrackInfo *p; p=(TrackInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),100,0,0,-1,-1,-1,1,"p[3]=",0,"Momentum");
   G__memvar_setup((void*)((long)(&p->r)-(long)(p)),100,0,0,-1,-1,-1,1,"r=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,-1,-1,1,"z=",0,"Impact parameters");
   G__memvar_setup((void*)((long)(&p->rz_svd)-(long)(p)),105,0,0,-1,-1,-1,1,"rz_svd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rphi_svd)-(long)(p)),105,0,0,-1,-1,-1,1,"rphi_svd=",0,"SVD hits");
   G__memvar_setup((void*)((long)(&p->atckpi)-(long)(p)),100,0,0,-1,-1,-1,1,"atckpi=",0,"Identification");
   G__memvar_setup((void*)((long)(&p->atckp)-(long)(p)),100,0,0,-1,-1,-1,1,"atckp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eid)-(long)(p)),100,0,0,-1,-1,-1,1,"eid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muid)-(long)(p)),100,0,0,-1,-1,-1,1,"muid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* VertexInfo */
static void G__setup_memvarVertexInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_VertexInfo));
   { VertexInfo *p; p=(VertexInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,-1,-1,1,"z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sz)-(long)(p)),100,0,0,-1,-1,-1,1,"sz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ntrk)-(long)(p)),105,0,0,-1,-1,-1,1,"ntrk=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ndf)-(long)(p)),105,0,0,-1,-1,-1,1,"ndf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chisq)-(long)(p)),100,0,0,-1,-1,-1,1,"chisq=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cl)-(long)(p)),100,0,0,-1,-1,-1,1,"cl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TrackInfo2 */
static void G__setup_memvarTrackInfo2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo2));
   { TrackInfo2 *p; p=(TrackInfo2*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),100,0,0,-1,-1,-1,1,"p=",0,"Momentum");
   G__memvar_setup((void*)((long)(&p->costh)-(long)(p)),100,0,0,-1,-1,-1,1,"costh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r)-(long)(p)),100,0,0,-1,-1,-1,1,"r=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,-1,-1,1,"z=",0,"Impact parameters");
   G__memvar_setup((void*)((long)(&p->rz_svd)-(long)(p)),105,0,0,-1,-1,-1,1,"rz_svd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rphi_svd)-(long)(p)),105,0,0,-1,-1,-1,1,"rphi_svd=",0,"SVD hits");
   G__memvar_setup((void*)((long)(&p->atckpi)-(long)(p)),100,0,0,-1,-1,-1,1,"atckpi=",0,"Identification");
   G__memvar_setup((void*)((long)(&p->atckp)-(long)(p)),100,0,0,-1,-1,-1,1,"atckp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eid)-(long)(p)),100,0,0,-1,-1,-1,1,"eid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muid)-(long)(p)),100,0,0,-1,-1,-1,1,"muid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* H0Info */
static void G__setup_memvarH0Info(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__lreco_dictLN_H0Info));
   { H0Info *p; p=(H0Info*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,-1,-1,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),100,0,0,-1,-1,-1,1,"p=",0,"Momentum");
   G__memvar_setup((void*)((long)(&p->costh)-(long)(p)),100,0,0,-1,-1,-1,1,"costh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mchi2)-(long)(p)),100,0,0,-1,-1,-1,1,"mchi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__lreco_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarlreco_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDalitzVars(void) {
   /* DalitzVars */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_DalitzVars));
   G__memfunc_setup("DalitzVars",1028,G__lreco_dict_168_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_DalitzVars), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_168_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_168_0_3, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DalitzVars::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_168_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DalitzVars::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_168_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DalitzVars::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_168_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DalitzVars::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_168_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_168_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DalitzVars::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_168_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DalitzVars::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_168_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DalitzVars::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_168_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DalitzVars::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DalitzVars", 1028, G__lreco_dict_168_0_15, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_DalitzVars), -1, 0, 1, 1, 1, 0, "u 'DalitzVars' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DalitzVars", 1154, G__lreco_dict_168_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_168_0_17, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_DalitzVars), -1, 1, 1, 1, 1, 0, "u 'DalitzVars' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDeltaEMbc(void) {
   /* DeltaEMbc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_DeltaEMbc));
   G__memfunc_setup("DeltaEMbc",833,G__lreco_dict_169_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_DeltaEMbc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_169_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_169_0_3, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DeltaEMbc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_169_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DeltaEMbc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_169_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DeltaEMbc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_169_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DeltaEMbc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_169_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_169_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DeltaEMbc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_169_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DeltaEMbc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_169_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DeltaEMbc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_169_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DeltaEMbc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DeltaEMbc", 833, G__lreco_dict_169_0_15, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_DeltaEMbc), -1, 0, 1, 1, 1, 0, "u 'DeltaEMbc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DeltaEMbc", 959, G__lreco_dict_169_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_169_0_17, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_DeltaEMbc), -1, 1, 1, 1, 1, 0, "u 'DeltaEMbc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEvtInfo(void) {
   /* EvtInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_EvtInfo));
   G__memfunc_setup("EvtInfo",699,G__lreco_dict_170_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_EvtInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_170_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVD",237,G__lreco_dict_170_0_3, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_170_0_4, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EvtInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_170_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EvtInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_170_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EvtInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_170_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EvtInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_170_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_170_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EvtInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_170_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EvtInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_170_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EvtInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_170_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EvtInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EvtInfo", 699, G__lreco_dict_170_0_16, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_EvtInfo), -1, 0, 1, 1, 1, 0, "u 'EvtInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EvtInfo", 825, G__lreco_dict_170_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_170_0_18, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_EvtInfo), -1, 1, 1, 1, 1, 0, "u 'EvtInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSFWMInfo(void) {
   /* SFWMInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_SFWMInfo));
   G__memfunc_setup("SFWMInfo",713,G__lreco_dict_171_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_SFWMInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_171_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_171_0_3, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SFWMInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_171_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SFWMInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_171_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SFWMInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_171_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SFWMInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_171_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_171_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SFWMInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_171_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SFWMInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_171_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SFWMInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_171_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SFWMInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SFWMInfo", 713, G__lreco_dict_171_0_15, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_SFWMInfo), -1, 0, 1, 1, 1, 0, "u 'SFWMInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SFWMInfo", 839, G__lreco_dict_171_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_171_0_17, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_SFWMInfo), -1, 1, 1, 1, 1, 0, "u 'SFWMInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEvtShape(void) {
   /* EvtShape */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_EvtShape));
   G__memfunc_setup("EvtShape",800,G__lreco_dict_172_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_EvtShape), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_172_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_172_0_3, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EvtShape::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_172_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EvtShape::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_172_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EvtShape::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_172_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EvtShape::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_172_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_172_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EvtShape::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_172_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EvtShape::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_172_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EvtShape::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_172_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EvtShape::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EvtShape", 800, G__lreco_dict_172_0_15, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_EvtShape), -1, 0, 1, 1, 1, 0, "u 'EvtShape' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EvtShape", 926, G__lreco_dict_172_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_172_0_17, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_EvtShape), -1, 1, 1, 1, 1, 0, "u 'EvtShape' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGammaInfo(void) {
   /* GammaInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_GammaInfo));
   G__memfunc_setup("GammaInfo",879,G__lreco_dict_173_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_GammaInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_173_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P",80,G__lreco_dict_173_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__lreco_dict_173_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("costh",545,G__lreco_dict_173_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_173_0_6, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GammaInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_173_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GammaInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_173_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GammaInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_173_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GammaInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_173_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_173_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GammaInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_173_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GammaInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_173_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GammaInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_173_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GammaInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GammaInfo", 879, G__lreco_dict_173_0_18, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_GammaInfo), -1, 0, 1, 1, 1, 0, "u 'GammaInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GammaInfo", 1005, G__lreco_dict_173_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_173_0_20, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_GammaInfo), -1, 1, 1, 1, 1, 0, "u 'GammaInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGenHepEvt(void) {
   /* GenHepEvt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_GenHepEvt));
   G__memfunc_setup("GenHepEvt",870,G__lreco_dict_174_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_GenHepEvt), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_174_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_174_0_3, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GenHepEvt::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_174_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenHepEvt::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_174_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GenHepEvt::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_174_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GenHepEvt::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_174_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_174_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenHepEvt::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_174_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GenHepEvt::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_174_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenHepEvt::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_174_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GenHepEvt::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GenHepEvt", 870, G__lreco_dict_174_0_15, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_GenHepEvt), -1, 0, 1, 1, 1, 0, "u 'GenHepEvt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GenHepEvt", 996, G__lreco_dict_174_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_174_0_17, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_GenHepEvt), -1, 1, 1, 1, 1, 0, "u 'GenHepEvt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGenParticleInfo(void) {
   /* GenParticleInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_GenParticleInfo));
   G__memfunc_setup("GenParticleInfo",1498,G__lreco_dict_179_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_GenParticleInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_179_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_179_0_3, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GenParticleInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_179_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenParticleInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_179_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GenParticleInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_179_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GenParticleInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_179_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_179_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenParticleInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_179_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GenParticleInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_179_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenParticleInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_179_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GenParticleInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GenParticleInfo", 1498, G__lreco_dict_179_0_15, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_GenParticleInfo), -1, 0, 1, 1, 1, 0, "u 'GenParticleInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GenParticleInfo", 1624, G__lreco_dict_179_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_179_0_17, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_GenParticleInfo), -1, 1, 1, 1, 1, 0, "u 'GenParticleInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHamletTag(void) {
   /* HamletTag */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_HamletTag));
   G__memfunc_setup("HamletTag",887,G__lreco_dict_180_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_HamletTag), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_180_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_180_0_3, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HamletTag::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_180_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HamletTag::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_180_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HamletTag::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_180_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HamletTag::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_180_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_180_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HamletTag::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_180_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HamletTag::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_180_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HamletTag::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_180_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HamletTag::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HamletTag", 887, G__lreco_dict_180_0_15, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_HamletTag), -1, 0, 1, 1, 1, 0, "u 'HamletTag' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HamletTag", 1013, G__lreco_dict_180_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_180_0_17, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_HamletTag), -1, 1, 1, 1, 1, 0, "u 'HamletTag' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncIPBoost(void) {
   /* IPBoost */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_IPBoost));
   G__memfunc_setup("IPBoost",672,G__lreco_dict_181_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_IPBoost), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_181_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_181_0_3, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&IPBoost::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_181_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IPBoost::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_181_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&IPBoost::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_181_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&IPBoost::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_181_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_181_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IPBoost::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_181_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&IPBoost::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_181_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IPBoost::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_181_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&IPBoost::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("IPBoost", 672, G__lreco_dict_181_0_15, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_IPBoost), -1, 0, 1, 1, 1, 0, "u 'IPBoost' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IPBoost", 798, G__lreco_dict_181_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_181_0_17, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_IPBoost), -1, 1, 1, 1, 1, 0, "u 'IPBoost' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKs0Info(void) {
   /* Ks0Info */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_Ks0Info));
   G__memfunc_setup("Ks0Info",634,G__lreco_dict_182_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_Ks0Info), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_182_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_182_0_3, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ks0Info::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_182_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ks0Info::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_182_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ks0Info::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_182_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ks0Info::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_182_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_182_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ks0Info::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_182_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ks0Info::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_182_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ks0Info::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_182_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ks0Info::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ks0Info", 634, G__lreco_dict_182_0_15, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_Ks0Info), -1, 0, 1, 1, 1, 0, "u 'Ks0Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ks0Info", 760, G__lreco_dict_182_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_182_0_17, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_Ks0Info), -1, 1, 1, 1, 1, 0, "u 'Ks0Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPi0Info(void) {
   /* Pi0Info */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_Pi0Info));
   G__memfunc_setup("Pi0Info",629,G__lreco_dict_183_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_Pi0Info), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_183_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("asym",442,G__lreco_dict_183_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P",80,G__lreco_dict_183_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__lreco_dict_183_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("costh",545,G__lreco_dict_183_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("egmin",528,G__lreco_dict_183_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("egmax",530,G__lreco_dict_183_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_183_0_9, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Pi0Info::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_183_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Pi0Info::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_183_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Pi0Info::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_183_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Pi0Info::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_183_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_183_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Pi0Info::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_183_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Pi0Info::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_183_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Pi0Info::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_183_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Pi0Info::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Pi0Info", 629, G__lreco_dict_183_0_21, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_Pi0Info), -1, 0, 1, 1, 1, 0, "u 'Pi0Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Pi0Info", 755, G__lreco_dict_183_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_183_0_23, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_Pi0Info), -1, 1, 1, 1, 1, 0, "u 'Pi0Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrackInfo(void) {
   /* TrackInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo));
   G__memfunc_setup("TrackInfo",897,G__lreco_dict_184_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_184_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P",80,G__lreco_dict_184_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__lreco_dict_184_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("costh",545,G__lreco_dict_184_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_184_0_6, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TrackInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_184_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_184_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TrackInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_184_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TrackInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_184_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_184_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_184_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrackInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_184_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_184_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrackInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TrackInfo", 897, G__lreco_dict_184_0_18, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo), -1, 0, 1, 1, 1, 0, "u 'TrackInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackInfo", 1023, G__lreco_dict_184_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_184_0_20, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo), -1, 1, 1, 1, 1, 0, "u 'TrackInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncVertexInfo(void) {
   /* VertexInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_VertexInfo));
   G__memfunc_setup("VertexInfo",1034,G__lreco_dict_185_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_VertexInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_185_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_185_0_3, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&VertexInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_185_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VertexInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_185_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&VertexInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_185_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&VertexInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_185_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_185_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VertexInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_185_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&VertexInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_185_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VertexInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_185_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&VertexInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("VertexInfo", 1034, G__lreco_dict_185_0_15, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_VertexInfo), -1, 0, 1, 1, 1, 0, "u 'VertexInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~VertexInfo", 1160, G__lreco_dict_185_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_185_0_17, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_VertexInfo), -1, 1, 1, 1, 1, 0, "u 'VertexInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrackInfo2(void) {
   /* TrackInfo2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo2));
   G__memfunc_setup("TrackInfo2",947,G__lreco_dict_186_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_186_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__lreco_dict_186_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__lreco_dict_186_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__lreco_dict_186_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__lreco_dict_186_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_186_0_7, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TrackInfo2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_186_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackInfo2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_186_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TrackInfo2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_186_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TrackInfo2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_186_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_186_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackInfo2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_186_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrackInfo2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_186_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackInfo2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_186_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrackInfo2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TrackInfo2", 947, G__lreco_dict_186_0_19, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo2), -1, 0, 1, 1, 1, 0, "u 'TrackInfo2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackInfo2", 1073, G__lreco_dict_186_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_186_0_21, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_TrackInfo2), -1, 1, 1, 1, 1, 0, "u 'TrackInfo2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncH0Info(void) {
   /* H0Info */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__lreco_dictLN_H0Info));
   G__memfunc_setup("H0Info",516,G__lreco_dict_187_0_1, 105, G__get_linked_tagnum(&G__lreco_dictLN_H0Info), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__lreco_dict_187_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__lreco_dict_187_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__lreco_dict_187_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__lreco_dict_187_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__lreco_dict_187_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__lreco_dict_187_0_7, 85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&H0Info::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__lreco_dict_187_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&H0Info::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__lreco_dict_187_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&H0Info::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__lreco_dict_187_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&H0Info::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__lreco_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__lreco_dict_187_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__lreco_dict_187_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&H0Info::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__lreco_dict_187_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&H0Info::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__lreco_dict_187_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&H0Info::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__lreco_dict_187_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&H0Info::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("H0Info", 516, G__lreco_dict_187_0_19, (int) ('i'), G__get_linked_tagnum(&G__lreco_dictLN_H0Info), -1, 0, 1, 1, 1, 0, "u 'H0Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~H0Info", 642, G__lreco_dict_187_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__lreco_dict_187_0_21, (int) ('u'), G__get_linked_tagnum(&G__lreco_dictLN_H0Info), -1, 1, 1, 1, 1, 0, "u 'H0Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunclreco_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globallreco_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funclreco_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__lreco_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_DalitzVars = { "DalitzVars" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_DeltaEMbc = { "DeltaEMbc" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_EvtInfo = { "EvtInfo" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_SFWMInfo = { "SFWMInfo" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_EvtShape = { "EvtShape" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_GammaInfo = { "GammaInfo" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_GenHepEvt = { "GenHepEvt" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_GenParticleInfo = { "GenParticleInfo" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_HamletTag = { "HamletTag" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_IPBoost = { "IPBoost" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_Ks0Info = { "Ks0Info" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_Pi0Info = { "Pi0Info" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_TrackInfo = { "TrackInfo" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_VertexInfo = { "VertexInfo" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_TrackInfo2 = { "TrackInfo2" , 99 , -1 };
G__linked_taginfo G__lreco_dictLN_H0Info = { "H0Info" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablelreco_dict() {
  G__lreco_dictLN_TClass.tagnum = -1 ;
  G__lreco_dictLN_TBuffer.tagnum = -1 ;
  G__lreco_dictLN_TMemberInspector.tagnum = -1 ;
  G__lreco_dictLN_TObject.tagnum = -1 ;
  G__lreco_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__lreco_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__lreco_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__lreco_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__lreco_dictLN_DalitzVars.tagnum = -1 ;
  G__lreco_dictLN_DeltaEMbc.tagnum = -1 ;
  G__lreco_dictLN_EvtInfo.tagnum = -1 ;
  G__lreco_dictLN_SFWMInfo.tagnum = -1 ;
  G__lreco_dictLN_EvtShape.tagnum = -1 ;
  G__lreco_dictLN_GammaInfo.tagnum = -1 ;
  G__lreco_dictLN_GenHepEvt.tagnum = -1 ;
  G__lreco_dictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__lreco_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__lreco_dictLN_GenParticleInfo.tagnum = -1 ;
  G__lreco_dictLN_HamletTag.tagnum = -1 ;
  G__lreco_dictLN_IPBoost.tagnum = -1 ;
  G__lreco_dictLN_Ks0Info.tagnum = -1 ;
  G__lreco_dictLN_Pi0Info.tagnum = -1 ;
  G__lreco_dictLN_TrackInfo.tagnum = -1 ;
  G__lreco_dictLN_VertexInfo.tagnum = -1 ;
  G__lreco_dictLN_TrackInfo2.tagnum = -1 ;
  G__lreco_dictLN_H0Info.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablelreco_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__lreco_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__lreco_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__lreco_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__lreco_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__lreco_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__lreco_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__lreco_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__lreco_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_DalitzVars),sizeof(DalitzVars),-1,28928,(char*)NULL,G__setup_memvarDalitzVars,G__setup_memfuncDalitzVars);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_DeltaEMbc),sizeof(DeltaEMbc),-1,28928,(char*)NULL,G__setup_memvarDeltaEMbc,G__setup_memfuncDeltaEMbc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_EvtInfo),sizeof(EvtInfo),-1,28928,(char*)NULL,G__setup_memvarEvtInfo,G__setup_memfuncEvtInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_SFWMInfo),sizeof(SFWMInfo),-1,28928,(char*)NULL,G__setup_memvarSFWMInfo,G__setup_memfuncSFWMInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_EvtShape),sizeof(EvtShape),-1,28928,(char*)NULL,G__setup_memvarEvtShape,G__setup_memfuncEvtShape);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_GammaInfo),sizeof(GammaInfo),-1,28928,(char*)NULL,G__setup_memvarGammaInfo,G__setup_memfuncGammaInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_GenHepEvt),sizeof(GenHepEvt),-1,28928,(char*)NULL,G__setup_memvarGenHepEvt,G__setup_memfuncGenHepEvt);
   G__get_linked_tagnum_fwd(&G__lreco_dictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__lreco_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_GenParticleInfo),sizeof(GenParticleInfo),-1,28928,(char*)NULL,G__setup_memvarGenParticleInfo,G__setup_memfuncGenParticleInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_HamletTag),sizeof(HamletTag),-1,28928,(char*)NULL,G__setup_memvarHamletTag,G__setup_memfuncHamletTag);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_IPBoost),sizeof(IPBoost),-1,28928,(char*)NULL,G__setup_memvarIPBoost,G__setup_memfuncIPBoost);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_Ks0Info),sizeof(Ks0Info),-1,28928,(char*)NULL,G__setup_memvarKs0Info,G__setup_memfuncKs0Info);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_Pi0Info),sizeof(Pi0Info),-1,28928,(char*)NULL,G__setup_memvarPi0Info,G__setup_memfuncPi0Info);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_TrackInfo),sizeof(TrackInfo),-1,28928,(char*)NULL,G__setup_memvarTrackInfo,G__setup_memfuncTrackInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_VertexInfo),sizeof(VertexInfo),-1,28928,(char*)NULL,G__setup_memvarVertexInfo,G__setup_memfuncVertexInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_TrackInfo2),sizeof(TrackInfo2),-1,28928,(char*)NULL,G__setup_memvarTrackInfo2,G__setup_memfuncTrackInfo2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__lreco_dictLN_H0Info),sizeof(H0Info),-1,28928,(char*)NULL,G__setup_memvarH0Info,G__setup_memfuncH0Info);
}
extern "C" void G__cpp_setuplreco_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setuplreco_dict()");
  G__set_cpp_environmentlreco_dict();
  G__cpp_setup_tagtablelreco_dict();

  G__cpp_setup_inheritancelreco_dict();

  G__cpp_setup_typetablelreco_dict();

  G__cpp_setup_memvarlreco_dict();

  G__cpp_setup_memfunclreco_dict();
  G__cpp_setup_globallreco_dict();
  G__cpp_setup_funclreco_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunclreco_dict();
  return;
}
class G__cpp_setup_initlreco_dict {
  public:
    G__cpp_setup_initlreco_dict() { G__add_setup_func("lreco_dict",(G__incsetup)(&G__cpp_setuplreco_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initlreco_dict() { G__remove_setup_func("lreco_dict"); }
};
G__cpp_setup_initlreco_dict G__cpp_setup_initializerlreco_dict;

